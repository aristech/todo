{"version":3,"sources":["components/svg/CalendarIcon.js","components/svg/CircleIcon.js","components/task/Task.js","components/svg/TaskIcon.js","components/board/Board.js","components/modal/Modal.js","apiUrl.js","components/App.js","index.js"],"names":["CalendarIcon","fill","xmlns","width","height","viewBox","id","d","CircleIcon","stroke","data-name","strokeWidth","cx","cy","r","Task","date","title","index","description","bgColor","setTask","setOpen","column","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","TaskWrapper","className","onClick","format","styled","div","props","TaskIcon","transform","Board","tasks","BoardHeader","droppableId","droppableProps","length","map","ele","key","content","placeholder","Modal","isOpen","task","deleteTask","style","display","justifyContent","alignItems","apiUrl","App","state","open","data","columns","columnOrder","fetchData","a","fetch","dataRes","json","start","filter","item","category","doing","done","taskIds","setState","handleChange","name","e","target","value","onDragEnd","result","source","destination","finish","newTaskIds","Array","from","splice","newColumn","newState","startTaskIds","newStart","finishTaskIds","newFinish","postId","method","headers","Accept","body","JSON","stringify","then","response","console","log","addTask","this","flexDirection","textAlign","padding","borderRadius","marginRight","onChange","type","boxShadow","backgroundColor","border","cursor","textDecoration","textShadow","color","lineHeight","columnId","ob","reduce","obj","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.344299b2.chunk.js","sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst CalendarIcon = ({ fill }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"5.903\"\n      height=\"6.747\"\n      viewBox=\"0 0 5.903 6.747\"\n    >\n      <path\n        id=\"calendar-regular\"\n        d=\"M5.271.843H4.638V.158A.159.159,0,0,0,4.48,0H3.953a.159.159,0,0,0-.158.158V.843H2.108V.158A.159.159,0,0,0,1.95,0H1.423a.159.159,0,0,0-.158.158V.843H.632A.633.633,0,0,0,0,1.476V6.114a.633.633,0,0,0,.632.633H5.271A.633.633,0,0,0,5.9,6.114V1.476A.633.633,0,0,0,5.271.843ZM5.192,6.114H.712a.079.079,0,0,1-.079-.079V2.108H5.271V6.035A.079.079,0,0,1,5.192,6.114Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nCalendarIcon.propTypes = {\n  fill: PropTypes.string.isRequired\n};\nexport default CalendarIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CircleIcon = ({ fill, stroke }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"11.807\"\n      height=\"11.807\"\n      viewBox=\"0 0 11.807 11.807\"\n    >\n      <g\n        id=\"Ellipse_1\"\n        data-name=\"Ellipse 1\"\n        fill={fill}\n        stroke={stroke}\n        strokeWidth=\"1\"\n      >\n        <circle id=\"c1\" cx=\"5.903\" cy=\"5.903\" r=\"5.903\" stroke=\"none\" />\n        <circle id=\"c2\" cx=\"5.903\" cy=\"5.903\" r=\"5.403\" fill=\"none\" />\n      </g>\n    </svg>\n  );\n};\n\nCircleIcon.propTypes = {\n  fill: PropTypes.string.isRequired,\n  stroke: PropTypes.string.isRequired\n};\nexport default CircleIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\nimport CalendarIcon from \"../svg/CalendarIcon\";\nimport CircleIcon from \"../svg/CircleIcon\";\nimport \"./task.scss\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Task = ({\n  date,\n  title,\n  index,\n  description,\n  bgColor,\n  setTask,\n  setOpen,\n  id,\n  column\n}) => {\n  return (\n    <>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snapshot) => (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <TaskWrapper\n              className=\"task\"\n              bgColor={bgColor}\n              onClick={() => {\n                setOpen(true);\n                setTask(id, title, description);\n              }}\n            >\n              <div className=\"task-header\">\n                <span className=\"date\">{format(date, \"DD-MM-YYYY\")}</span>\n                <span className=\"icon\">\n                  <CalendarIcon fill={\"#c7c7c7\"} />\n                </span>\n              </div>\n              <div className=\"task-body\">\n                <div className=\"title\">\n                  <span className=\"icon\">\n                    <CircleIcon fill={\"#fff\"} stroke={\"#c7c7c7\"} />\n                  </span>\n                  <span className=\"text\">{title}</span>\n                </div>\n\n                <div className=\"description\">{description}</div>\n              </div>\n            </TaskWrapper>\n          </div>\n        )}\n      </Draggable>\n    </>\n  );\n};\n\nexport default Task;\n\nTask.propTypes = {\n  date: PropTypes.string.isRequired,\n  bgColor: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\n\nconst TaskWrapper = styled.div`\n  &:before {\n    background-color: ${props => props.bgColor};\n  }\n  &:hover {\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TaskIcon = ({fill}) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"55.685\" height=\"46.988\" viewBox=\"0 0 55.685 46.988\">\n      <path id=\"tasks-solid\"\n            d=\"M15.184,32.354a1.305,1.305,0,0,0-1.849,0L6.41,39.24,3.941,36.834a1.305,1.305,0,0,0-1.849,0L.384,38.544a1.305,1.305,0,0,0,0,1.849L5.56,45.548a1.39,1.39,0,0,0,1.915,0l1.7-1.7L17.024,36a1.315,1.315,0,0,0,.01-1.849Zm0,17.314a1.305,1.305,0,0,0-1.849,0L6.41,56.6l-2.469-2.4a1.305,1.305,0,0,0-1.849,0L.384,55.9a1.305,1.305,0,0,0,0,1.849l5.163,5.166a1.389,1.389,0,0,0,1.914,0L9.169,61.21l7.852-7.855a1.305,1.305,0,0,0,.01-1.838ZM6.961,68.517a5.221,5.221,0,1,0,0,10.441,5.22,5.22,0,1,0,0-10.441Zm46.984,1.74H22.623A1.74,1.74,0,0,0,20.882,72v3.48a1.74,1.74,0,0,0,1.74,1.74H53.945a1.74,1.74,0,0,0,1.74-1.74V72A1.74,1.74,0,0,0,53.945,70.257Zm0-34.8H22.623a1.74,1.74,0,0,0-1.74,1.74v3.48a1.74,1.74,0,0,0,1.74,1.74H53.945a1.74,1.74,0,0,0,1.74-1.74v-3.48A1.74,1.74,0,0,0,53.945,35.454Zm0,17.4H22.623a1.74,1.74,0,0,0-1.74,1.74v3.48a1.74,1.74,0,0,0,1.74,1.74H53.945a1.74,1.74,0,0,0,1.74-1.74V54.6A1.74,1.74,0,0,0,53.945,52.856Z\"\n            transform=\"translate(-0.001 -31.971)\" fill={fill}/>\n    </svg>\n  );\n};\n\nTaskIcon.propTypes = {\n  fill: PropTypes.string.isRequired,\n};\nexport default TaskIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Task from \"../task/Task\";\nimport \"./board.scss\";\nimport TaskIcon from \"../svg/TaskIcon\";\n\nconst Board = ({ title, bgColor, setTask, setOpen, column, tasks }) => {\n  return (\n    <>\n      <div className=\"board\">\n        <BoardHeader bgColor={bgColor} className=\"board-header\">\n          <h1>{title}</h1>\n        </BoardHeader>\n        <Droppable droppableId={column}>\n          {(provided, snapshot) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              <div className=\"board-body\">\n                <div className=\"tasks\">\n                  {tasks.length < 1 ? (\n                    <div className=\"no-tasks\">\n                      <TaskIcon fill={\"#F5F5F5\"} />\n                      <h3>No tasks for this board</h3>\n                    </div>\n                  ) : (\n                    tasks.map((ele, index) => {\n                      return (\n                        <Task\n                          column={column}\n                          key={ele.id}\n                          id={ele.id}\n                          index={index}\n                          setOpen={setOpen}\n                          setTask={setTask}\n                          bgColor={bgColor}\n                          date={ele.date}\n                          description={ele.content}\n                          title={ele.title}\n                        />\n                      );\n                    })\n                  )}\n                </div>\n              </div>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </>\n  );\n};\n\nexport default Board;\n\nBoard.propTypes = {\n  title: PropTypes.string.isRequired,\n  bgColor: PropTypes.string.isRequired\n};\n\nconst BoardHeader = styled.div`\n  background-color: ${props => props.bgColor};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./modal.scss\";\n\nconst Modal = ({ isOpen, setOpen, task, deleteTask }) => {\n  return (\n    <>\n      {isOpen ? (\n        <div className=\"modal\">\n          <div className=\"inner\">\n            <div className=\"inner-header\">\n              <h1 className=\"title\">{task.title}</h1>\n            </div>\n            <div className=\"inner-body\">\n              <p className=\"description\">{task.description}</p>\n            </div>\n            <div\n              className=\"inner-footer\"\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\"\n              }}\n            >\n              <button\n                onClick={() => deleteTask(task.id)}\n                className=\"modal-button\"\n              >\n                delete\n              </button>\n              <button onClick={() => setOpen(!isOpen)} className=\"modal-button\">\n                close\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\nexport default Modal;\n","export const apiUrl = \"http://project.test\";\n","import React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Board from \"./board/Board\";\nimport Modal from \"./modal/Modal\";\nimport { apiUrl } from \"../apiUrl\";\n\nclass App extends React.Component {\n  state = {\n    open: false,\n    task: {},\n    data: [],\n    title: \"\",\n    description: \"\",\n    columns: {},\n    columnOrder: [\"start\", \"doing\", \"done\"]\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  // Fetch all tasks\n  fetchData = async () => {\n    const dataRes = await fetch(`${apiUrl}/wp-json/aris/v1/data`);\n    const data = await dataRes.json();\n    const start = data.filter(item => item.category === \"start\");\n    const doing = data.filter(item => item.category === \"doing\");\n    const done = data.filter(item => item.category === \"done\");\n    const columns = {\n      start: {\n        id: \"start\",\n        title: \"To do\",\n        bgColor: \"#FF5964\",\n        taskIds: start.map(item => item.id)\n      },\n      doing: {\n        id: \"doing\",\n        title: \"Doing\",\n        bgColor: \"#80b5ea\",\n        taskIds: doing.map(item => item.id)\n      },\n      done: {\n        id: \"done\",\n        title: \"Done\",\n        bgColor: \"#6BF178\",\n        taskIds: done.map(item => item.id)\n      }\n    };\n    this.setState({ data, columns, start });\n  };\n\n  handleChange = (name, e) => {\n    this.setState({\n      [name]: e.target.value\n    });\n  };\n  onDragEnd = result => {\n    const { source, destination, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n\n      this.setState(newState);\n    } else {\n      // Moving to another column\n\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = {\n        ...start,\n        taskIds: startTaskIds\n      };\n\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = {\n        ...finish,\n        taskIds: finishTaskIds\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n\n      const data = { postId: draggableId, category: destination.droppableId };\n      fetch(`${apiUrl}/wp-json/aris/v1/move_task`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n        });\n    }\n  };\n\n  addTask = async () => {\n    if (this.state.title === \"\") {\n      return;\n    } else {\n      const data = {\n        title: this.state.title,\n        description: this.state.description\n      };\n      await fetch(`${apiUrl}/wp-json/aris/v1/task`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          this.setState({\n            title: \"\",\n            description: \"\"\n          });\n          this.fetchData();\n        });\n    }\n  };\n\n  deleteTask = async id => {\n    const data = { postId: id };\n    await fetch(`${apiUrl}/wp-json/aris/v1/deleteTask`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          open: !this.state.open\n        });\n        this.fetchData();\n      });\n  };\n\n  setOpen = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n  setTask = (id, title, description) => {\n    this.setState({\n      task: {\n        id,\n        title,\n        description\n      }\n    });\n  };\n  render() {\n    if (this.state.data.length === 0) {\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          }}\n        >\n          <div className=\"input-box\" style={{ padding: 30 }}>\n            <input\n              value={this.state.title}\n              style={{\n                width: 120,\n                height: 40,\n                borderRadius: 5,\n                marginRight: 10,\n                textAlign: \"center\"\n              }}\n              onChange={e => this.handleChange(\"title\", e)}\n              placeholder=\"Title\"\n              type=\"text\"\n            />\n            <input\n              value={this.state.description}\n              style={{\n                width: 240,\n                height: 40,\n                borderRadius: 5,\n                marginRight: 10,\n                textAlign: \"center\"\n              }}\n              onChange={e => this.handleChange(\"description\", e)}\n              placeholder=\"Description\"\n              type=\"text\"\n            />\n            <button\n              onClick={() => this.addTask()}\n              style={{\n                boxShadow: \"inset 0px 1px 3px 0px #91b8b3\",\n                backgroundColor: \"#768d87\",\n                borderRadius: 5,\n                border: \"1px solid #566963\",\n                cursor: \"pointer\",\n                textDecoration: \"none\",\n                textShadow: \"0px -1px 0px #2b665e\",\n                color: \"#fff\",\n                height: 40,\n                lineHeight: 0\n              }}\n            >\n              add task\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          }}\n        >\n          <div className=\"input-box\" style={{ padding: 30 }}>\n            <input\n              value={this.state.title}\n              style={{\n                width: 120,\n                height: 40,\n                borderRadius: 5,\n                marginRight: 10,\n                textAlign: \"center\"\n              }}\n              onChange={e => this.handleChange(\"title\", e)}\n              placeholder=\"Title\"\n              type=\"text\"\n            />\n            <input\n              value={this.state.description}\n              style={{\n                width: 240,\n                height: 40,\n                borderRadius: 5,\n                marginRight: 10,\n                textAlign: \"center\"\n              }}\n              onChange={e => this.handleChange(\"description\", e)}\n              placeholder=\"Description\"\n              type=\"text\"\n            />\n            <button\n              onClick={() => this.addTask()}\n              style={{\n                boxShadow: \"inset 0px 1px 3px 0px #91b8b3\",\n                backgroundColor: \"#768d87\",\n                borderRadius: 5,\n                border: \"1px solid #566963\",\n                cursor: \"pointer\",\n                textDecoration: \"none\",\n                textShadow: \"0px -1px 0px #2b665e\",\n                color: \"#fff\",\n                height: 40,\n                lineHeight: 0\n              }}\n            >\n              add task\n            </button>\n          </div>\n          <div className=\"boards\">\n            {this.state.open ? (\n              <Modal\n                deleteTask={this.deleteTask}\n                task={this.state.task}\n                isOpen={this.state.open}\n                setOpen={this.setOpen}\n              />\n            ) : null}\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              {this.state.columnOrder.map(columnId => {\n                const column = this.state.columns[columnId];\n                const arrayToObject = array =>\n                  array.reduce((obj, item) => {\n                    obj[item.id] = item;\n                    return obj;\n                  }, {});\n                const ob = arrayToObject(this.state.data);\n\n                const tasks = column.taskIds.map(id => ob[id]);\n\n                return (\n                  <Board\n                    key={column.id}\n                    column={column.id}\n                    bgColor={column.bgColor}\n                    title={column.title}\n                    setOpen={this.setOpen}\n                    setTask={this.setTask}\n                    tasks={tasks}\n                  />\n                );\n              })}\n            </DragDropContext>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}